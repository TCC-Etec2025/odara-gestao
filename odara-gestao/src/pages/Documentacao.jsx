import React, { useState } from 'react';

const Documentacao = () => {
  const [activeItem, setActiveItem] = useState(null);

  const funcionalidades = [
    {
      nome: 'Registro de medicamentos',
      descricao: 'Controle completo da medica√ß√£o dos residentes com alertas e hist√≥rico detalhado',
      icone: 'üíä',
      detalhes: [
        'Controle de hor√°rios e dosagens',
        'Alertas para medicamentos pendentes',
        'Relat√≥rio de administra√ß√£o',
      ]
    },
    {
      nome: 'Registro de Atividades',
      descricao: 'Organiza√ß√£o e acompanhamento das atividades di√°rias dos residentes',
      icone: 'üìã',
      detalhes: [
        'Agendamento de atividades recreativas',
        'Registro de participa√ß√£o',
        'Avalia√ß√£o de desempenho',
        'Programa√ß√£o semanal',
      ]
    },
    {
      nome: 'Registro de Ocorr√™ncias',
      descricao: 'Documenta√ß√£o de incidentes e acompanhamento de resolu√ß√£o',
      icone: '‚ö†Ô∏è',
      detalhes: [
        'Classifica√ß√£o por gravidade',
        'Registro fotogr√°fico',
        'Fluxo de acompanhamento',
        'Comunica√ß√£o com familiares',
        'Relat√≥rios anal√≠ticos'
      ]
    },
    {
      nome: 'Registro da sa√∫de corporal inicial',
      descricao: 'Monitoramento cont√≠nuo do estado de sa√∫de dos residentes',
      icone: 'üè•',
      detalhes: [
        'O Registro da Sa√∫de Corporal Inicial se refere √† investiga√ß√£o e registro de eventuais ferimentos e/ou quest√µes corporais no momento da entrada inicial da pessoa idosa na Casa. Com um template anat√¥mico pr√°tico, basta selecionar as regi√µes do corpo afetadas e descrever os sintomas f√≠sicos da pessoa idosa referentes a essa regi√£o, dessa forma preza-se por um acompanhamento mais completo da sa√∫de do individuo e garante um melhor entendimento da situa√ß√£o da sa√∫de dele ao entrar em seu novo lar.',
      ]
    },
    {
      nome: 'Registro de alimenta√ß√£o',
      descricao: 'Gest√£o nutricional e acompanhamento alimentar',
      icone: 'üçΩÔ∏è',
      detalhes: [
        'Registro de consumo',
        'Controle de dietas especiais',
        'Prefer√™ncias individuais'
      ]
    },
    {
      nome: 'Registro de comportamento',
      descricao: 'Registro e an√°lise de padr√µes comportamentais',
      icone: 'üìä',
      detalhes: [
        'Identifica√ß√£o de altera√ß√µes',
        'Acompanhamento psicol√≥gico',
        'Registro de humor',
        'Integra√ß√£o com equipe'
      ]
    },
    {
      nome: 'Registro de prefer√™ncias',
      descricao: 'Registro das prefer√™ncias individuais de cada residente',
      icone: '‚≠ê',
      detalhes: [
        'H√°bitos pessoais',
        'Gostos e avers√µes',
        'Rotinas preferidas',
        'Atividades favoritas',
      ]
    },
    {
      nome: 'Registro de rela√ß√µes internas',
      descricao: 'Mapeamento das rela√ß√µes interpessoais na institui√ß√£o',
      icone: 'üë•',
      detalhes: [
        'V√≠nculos entre residentes',
        'Registro de visitas',
        'Contatos familiares',
        'Prefer√™ncias de conviv√™ncia'
      ]
    },
    {
      nome: 'Registro de consultas m√©dicas',
      descricao: 'Controle completo de consultas e acompanhamento m√©dico',
      icone: 'ü©∫',
      detalhes: [
        'Agendamento de consultas',
        'Prescri√ß√µes digitais',
        'Laudos m√©dicos',
      ]
    },
    {
      nome: 'Registro de exames m√©dicos',
      descricao: 'Organiza√ß√£o e resultados de exames m√©dicos',
      icone: 'üî¨',
      detalhes: [
        'Agendamento de exames',
        'Alertas',
      ]
    },
    {
      nome: 'Registros de v√≠deo e fotogr√°fico',
      descricao: 'Armazenamento de registros fotogr√°ficos e v√≠deos',
      icone: 'üìπ',
      detalhes: [
        'Registro de evolu√ß√£o',
        'Compartilhamento familiar',
      ]
    },
    {
      nome: 'Plataforma para Reuni√µes',
      descricao: 'Sistema integrado de reuni√µes e comunica√ß√£o',
      icone: 'üìû',
      detalhes: [
        'Agenda compartilhada',
        'Comunica√ß√£o com familiares',
        'Reuni√µes multidisciplinares',
      ]
    }
  ];

  return (
    <main className="container mx-auto py-8 px-4 max-w-6xl font-sans">
      {/* Cabe√ßalho */}
      <header className="text-center mb-12">
        <h1 className="text-4xl font-bold text-odara-primary mb-2">Funcionalidades do Sistema</h1>
        <h2 className="text-xl text-gray-600">Explore todas as ferramentas dispon√≠veis para gest√£o de ILPS</h2>
      </header>

      {/* Lista de funcionalidades */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
        {funcionalidades.map((item, index) => (
          <button
            key={index}
            onClick={() => setActiveItem(index)}
            className={`bg-white p-6 rounded-xl shadow-sm hover:shadow-md transition-all text-left border-2 ${activeItem === index ? 'border-odara-light-blue shadow-md' : 'border-gray-100'}`}
          >
            <div className="flex items-start">
              <span className="text-2xl mr-4">{item.icone}</span>
              <div>
                <h3 className="text-lg font-semibold text-gray-800">{item.nome}</h3>
                <p className="text-sm text-gray-500 mt-1 line-clamp-2">{item.descricao}</p>
              </div>
            </div>
          </button>
        ))}
      </div>

      {/* Se√ß√£o de detalhes */}
      {activeItem !== null && (
        <section className="bg-gray-50 rounded-xl p-8 mb-8 animate-fadeIn">
          <div className="flex items-center mb-6">
            <span className="text-3xl mr-4">{funcionalidades[activeItem].icone}</span>
            <div>
              <h2 className="text-2xl font-bold text-odara-primary">{funcionalidades[activeItem].nome}</h2>
              <p className="text-gray-600">{funcionalidades[activeItem].descricao}</p>
            </div>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            <div className="bg-white p-6 rounded-lg shadow-xs border border-gray-100">
              <h3 className="text-lg font-semibold text-odara-darkest mb-4 flex items-center">
                <svg className="w-5 h-5 mr-2 text-odara-dark-blue" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                Recursos Principais
              </h3>
              <ul className="space-y-3">
                {funcionalidades[activeItem].detalhes.map((detalhe, i) => (
                  <li key={i} className="flex items-start">
                    <span className="text-odara-dark-blue mr-2">‚Ä¢</span>
                    <span className="text-gray-700">{detalhe}</span>
                  </li>
                ))}
              </ul>
            </div>
          </div>
        </section>
      )}

      {/* Informa√ß√£o para ver as descri√ß√µes */}
      {activeItem === null && (
        <div className="text-center py-12">
          <svg className="w-12 h-12 mx-auto text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={1} d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <h3 className="text-lg font-medium text-gray-500 mt-4">Selecione uma funcionalidade para ver detalhes</h3>
          <p className="text-gray-400 mt-1">Conhe√ßa todas as ferramentas dispon√≠veis para gest√£o de ILPS</p>
        </div>
      )}
    </main>
  );
};

export default Documentacao;